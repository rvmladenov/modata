/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from './task-list.component';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from './task.service';
import * as import9 from '@angular/core/src/metadata/view';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from './tasks.component';
import * as import12 from './tasks.component.ngfactory';
var renderType_TaskListComponent_Host:import0.RenderComponentType = (null as any);
class _View_TaskListComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _TaskListComponent_0_4:import3.TaskListComponent;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_TaskListComponent_Host0,renderType_TaskListComponent_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('app-task-list',rootSelector,(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_TaskListComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._TaskListComponent_0_4 = new import3.TaskListComponent(this.parentInjector.get(import8.TaskService));
    this._appEl_0.initComponent(this._TaskListComponent_0_4,[],compView_0);
    compView_0.create(this._TaskListComponent_0_4,this.projectableNodes,(null as any));
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.TaskListComponent) && (0 === requestNodeIndex))) { return this._TaskListComponent_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (((this.numberOfChecks === 0) && !throwOnChange)) { this._TaskListComponent_0_4.ngOnInit(); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_TaskListComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_TaskListComponent_Host === (null as any))) { (renderType_TaskListComponent_Host = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.None,[],{})); }
  return new _View_TaskListComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const TaskListComponentNgFactory:import10.ComponentFactory<import3.TaskListComponent> = new import10.ComponentFactory<import3.TaskListComponent>('app-task-list',viewFactory_TaskListComponent_Host0,import3.TaskListComponent);
const styles_TaskListComponent:any[] = [];
var renderType_TaskListComponent:import0.RenderComponentType = (null as any);
class _View_TaskListComponent0 extends import1.AppView<import3.TaskListComponent> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  /*private*/ _appEl_2:import2.AppElement;
  _TasksComponent_2_4:import11.TasksComponent;
  _text_3:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_TaskListComponent0,renderType_TaskListComponent,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._el_0 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','col-md-8 col-md-offset-2');
    this._text_1 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_2 = this.renderer.createElement(this._el_0,'app-task',(null as any));
    this._appEl_2 = new import2.AppElement(2,0,this,this._el_2);
    var compView_2:any = import12.viewFactory_TasksComponent0(this.viewUtils,this.injector(2),this._appEl_2);
    this._TasksComponent_2_4 = new import11.TasksComponent(this.parentInjector.get(import8.TaskService));
    this._appEl_2.initComponent(this._TasksComponent_2_4,[],compView_2);
    compView_2.create(this._TasksComponent_2_4,[],(null as any));
    this._text_3 = this.renderer.createText(this._el_0,'\n',(null as any));
    this.init([],[
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3
    ]
    ,[],[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import11.TasksComponent) && (2 === requestNodeIndex))) { return this._TasksComponent_2_4; }
    return notFoundResult;
  }
}
export function viewFactory_TaskListComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.TaskListComponent> {
  if ((renderType_TaskListComponent === (null as any))) { (renderType_TaskListComponent = viewUtils.createRenderComponentType('C:/github/demo-nodejs-ng2-socketio-d3/assets/app/tasks/task-list.component.html',0,import9.ViewEncapsulation.None,styles_TaskListComponent,{})); }
  return new _View_TaskListComponent0(viewUtils,parentInjector,declarationEl);
}